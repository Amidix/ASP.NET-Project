// <auto-generated />
using System;
using EnsatProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EnsatProject.Migrations.Data
{
    [DbContext(typeof(DataContext))]
    [Migration("20210212183810_fk-bug")]
    partial class fkbug
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("EnsatProject.Areas.Identity.Data.EnsatProjectUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnsatProjectUser");
                });

            modelBuilder.Entity("EnsatProject.Models.Absence", b =>
                {
                    b.Property<int>("AbsenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Absent")
                        .HasColumnType("bit");

                    b.Property<int?>("EleveId")
                        .HasColumnType("int");

                    b.Property<int?>("SeanceId")
                        .HasColumnType("int");

                    b.HasKey("AbsenceId");

                    b.HasIndex("EleveId");

                    b.HasIndex("SeanceId");

                    b.ToTable("Absence");
                });

            modelBuilder.Entity("EnsatProject.Models.CourseAssignment", b =>
                {
                    b.Property<int>("MatiereId")
                        .HasColumnType("int");

                    b.Property<int>("EnseignantId")
                        .HasColumnType("int");

                    b.HasKey("MatiereId", "EnseignantId");

                    b.HasIndex("EnseignantId");

                    b.ToTable("CourseAssignment");
                });

            modelBuilder.Entity("EnsatProject.Models.Eleve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnsatProjectUserId")
                        .HasColumnType("int");

                    b.Property<int?>("FiliereId")
                        .HasColumnType("int");

                    b.Property<int>("MyRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnsatProjectUserId");

                    b.HasIndex("FiliereId");

                    b.ToTable("Eleve");
                });

            modelBuilder.Entity("EnsatProject.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("EleveId")
                        .HasColumnType("int");

                    b.Property<int?>("MatiereId")
                        .HasColumnType("int");

                    b.Property<int?>("NoteId")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("EleveId");

                    b.HasIndex("MatiereId");

                    b.HasIndex("NoteId");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("EnsatProject.Models.Enseignant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("EnsatProjectUserId")
                        .HasColumnType("int");

                    b.Property<int>("MyRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Enseignant");
                });

            modelBuilder.Entity("EnsatProject.Models.Filiere", b =>
                {
                    b.Property<int?>("FiliereId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ChefFiliereId")
                        .HasColumnType("int");

                    b.Property<string>("NomFiliere")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FiliereId");

                    b.HasIndex("ChefFiliereId");

                    b.ToTable("Filiere");
                });

            modelBuilder.Entity("EnsatProject.Models.Matiere", b =>
                {
                    b.Property<int>("MatiereId")
                        .HasColumnType("int");

                    b.Property<int>("FiliereId")
                        .HasColumnType("int");

                    b.Property<float>("HeuresCours")
                        .HasColumnType("real");

                    b.Property<float>("HeuresTD")
                        .HasColumnType("real");

                    b.Property<float>("HeuresTP")
                        .HasColumnType("real");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("NomMatiere")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MatiereId");

                    b.HasIndex("FiliereId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Matiere");
                });

            modelBuilder.Entity("EnsatProject.Models.Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CoordinateurId")
                        .HasColumnType("int");

                    b.Property<string>("NomModule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModuleId");

                    b.HasIndex("CoordinateurId");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("EnsatProject.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("EleveId")
                        .HasColumnType("int");

                    b.Property<int>("MatiereId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<float>("Valeur")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("EleveId");

                    b.HasIndex("MatiereId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("EnsatProject.Models.Seance", b =>
                {
                    b.Property<int>("SeanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DebutSeance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinSeance")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MatiereId")
                        .HasColumnType("int");

                    b.Property<int>("Salle")
                        .HasColumnType("int");

                    b.HasKey("SeanceId");

                    b.HasIndex("MatiereId");

                    b.ToTable("Seance");
                });

            modelBuilder.Entity("EnsatProject.Models.Absence", b =>
                {
                    b.HasOne("EnsatProject.Models.Eleve", "Eleve")
                        .WithMany()
                        .HasForeignKey("EleveId");

                    b.HasOne("EnsatProject.Models.Seance", "Seance")
                        .WithMany()
                        .HasForeignKey("SeanceId");

                    b.Navigation("Eleve");

                    b.Navigation("Seance");
                });

            modelBuilder.Entity("EnsatProject.Models.CourseAssignment", b =>
                {
                    b.HasOne("EnsatProject.Models.Enseignant", "Enseignant")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("EnseignantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnsatProject.Models.Matiere", "Matiere")
                        .WithMany("CourseAssignements")
                        .HasForeignKey("MatiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enseignant");

                    b.Navigation("Matiere");
                });

            modelBuilder.Entity("EnsatProject.Models.Eleve", b =>
                {
                    b.HasOne("EnsatProject.Areas.Identity.Data.EnsatProjectUser", "EnsatProjectUser")
                        .WithMany()
                        .HasForeignKey("EnsatProjectUserId");

                    b.HasOne("EnsatProject.Models.Filiere", "Filiere")
                        .WithMany()
                        .HasForeignKey("FiliereId");

                    b.Navigation("EnsatProjectUser");

                    b.Navigation("Filiere");
                });

            modelBuilder.Entity("EnsatProject.Models.Enrollment", b =>
                {
                    b.HasOne("EnsatProject.Models.Eleve", "Eleve")
                        .WithMany("Enrollments")
                        .HasForeignKey("EleveId");

                    b.HasOne("EnsatProject.Models.Matiere", "Matiere")
                        .WithMany("Entrollments")
                        .HasForeignKey("MatiereId");

                    b.HasOne("EnsatProject.Models.Note", "Note")
                        .WithMany()
                        .HasForeignKey("NoteId");

                    b.Navigation("Eleve");

                    b.Navigation("Matiere");

                    b.Navigation("Note");
                });

            modelBuilder.Entity("EnsatProject.Models.Filiere", b =>
                {
                    b.HasOne("EnsatProject.Models.Enseignant", "ChefFiliere")
                        .WithMany()
                        .HasForeignKey("ChefFiliereId");

                    b.Navigation("ChefFiliere");
                });

            modelBuilder.Entity("EnsatProject.Models.Matiere", b =>
                {
                    b.HasOne("EnsatProject.Models.Filiere", "Filiere")
                        .WithMany("Matieres")
                        .HasForeignKey("FiliereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnsatProject.Models.Module", "Module")
                        .WithMany("Matieres")
                        .HasForeignKey("ModuleId");

                    b.Navigation("Filiere");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("EnsatProject.Models.Module", b =>
                {
                    b.HasOne("EnsatProject.Models.Enseignant", "Coordinateur")
                        .WithMany()
                        .HasForeignKey("CoordinateurId");

                    b.Navigation("Coordinateur");
                });

            modelBuilder.Entity("EnsatProject.Models.Note", b =>
                {
                    b.HasOne("EnsatProject.Models.Eleve", "Eleve")
                        .WithMany("Notes")
                        .HasForeignKey("EleveId");

                    b.HasOne("EnsatProject.Models.Matiere", "Matiere")
                        .WithMany()
                        .HasForeignKey("MatiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eleve");

                    b.Navigation("Matiere");
                });

            modelBuilder.Entity("EnsatProject.Models.Seance", b =>
                {
                    b.HasOne("EnsatProject.Models.Matiere", "Matiere")
                        .WithMany()
                        .HasForeignKey("MatiereId");

                    b.Navigation("Matiere");
                });

            modelBuilder.Entity("EnsatProject.Models.Eleve", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Notes");
                });

            modelBuilder.Entity("EnsatProject.Models.Enseignant", b =>
                {
                    b.Navigation("CourseAssignments");
                });

            modelBuilder.Entity("EnsatProject.Models.Filiere", b =>
                {
                    b.Navigation("Matieres");
                });

            modelBuilder.Entity("EnsatProject.Models.Matiere", b =>
                {
                    b.Navigation("CourseAssignements");

                    b.Navigation("Entrollments");
                });

            modelBuilder.Entity("EnsatProject.Models.Module", b =>
                {
                    b.Navigation("Matieres");
                });
#pragma warning restore 612, 618
        }
    }
}
